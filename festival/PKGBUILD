# $Id$
# Maintainer:
# Contributor: Andrea Scarpino <andrea@archlinux.org>
# Contributor: Simo Leone <neotuli@gmail.com>

pkgname=festival
pkgver=2.4
pkgrel=1
pkgdesc="A general multi-lingual speech synthesis system"
arch=('i686' 'x86_64')
url="http://www.cstr.ed.ac.uk/projects/festival/"
license=('BSD' 'GPL' 'custom')
depends=('perl')
options=('!makeflags')
source=(http://www.cstr.ed.ac.uk/downloads/${pkgname}/${pkgver}/${pkgname}-${pkgver}-release.tar.gz
        http://www.cstr.ed.ac.uk/downloads/${pkgname}/${pkgver}/speech_tools-${pkgver}-release.tar.gz
        http://www.cstr.ed.ac.uk/downloads/${pkgname}/${pkgver}/festlex_CMU.tar.gz
        http://www.cstr.ed.ac.uk/downloads/${pkgname}/${pkgver}/festlex_OALD.tar.gz
        http://www.cstr.ed.ac.uk/downloads/${pkgname}/${pkgver}/festlex_POSLEX.tar.gz
# festival patches
        festival-1.95-examples.patch
        festival-text2wave-manpage.patch
        festival-1.95-libdir.patch
        festival-1.95-audsp.patch
        festival-1.96-chroot.patch
# PATCH-FIX-UPSTREAM festival-no-LD_LIBRARY_PATH-extension.patch bnc#642507 vuntz@opensuse.org -- Do not change LD_LIBRARY_PATH in binaries, to avoid any risks
        festival-no-LD_LIBRARY_PATH-extension.patch
# PATCH-FIX-UPSTREAM festival-safe-temp-file.patch bnc#642507 vuntz@opensuse.org -- Create temporary files in a safe way
        festival-safe-temp-file.patch
# speech-tools patches
# PATCH-FIX-UPSTREAM speech_tools-undefined-operation.patch vuntz@opensuse.org -- Avoid a undefined-operation warning with gcc (sending mail upstream)
        speech_tools-undefined-operation.patch
        speech_tools-1.2.95-config.patch
# PATCH-FIX-UPSTREAM speech_tools-no-LD_LIBRARY_PATH-extension.patch vuntz@opensuse.org -- Do not change LD_LIBRARY_PATH in binaries, to avoid any risks
        speech_tools-no-LD_LIBRARY_PATH-extension.patch

        # speechconfig.patch
        # festconfig.patch
        # festival-shared-build.patch
        # # festival.gcc47.patch
        # festival-2.1-bettersonamehack.patch
        )

md5sums=('49707d2f6744d5a67f81a96c36f7cb59'
         '3d60e563135363eb2548d947f7ef4e14'
         '6a2ee4fed7c3ebedf197a3b8524ccb87'
         '84af32a914d996f57bc4cb36fe8cdc97'
         'aa80f9250065b318325f16fdad3a4484'
         '72b3f17b71c4fca864173a61b3fb7b48'
         '7c1a944eb735dd5af5f48b67b2ba4f1b'
         '368de72660edeceec617a483b68b231e'
         '57245f79eda390a3d8c813a5e91cf3e4'
         '847c044121e0334399328c6f4661f92a'
         'e8f6a39ec8a7c9143d520cb9686f5352'
         '89e0ea56cffd57c6546c0adb612907aa'
         'ad7ddda066aaba07a37ce8f57e72a2cf'
         '2a7b4d89fbb16c5113bb20b744500ddc'
         '12f537bb27a40e7b74d6b8984f2e73f6')

prepare() {
  cd $srcdir/festival

  patch -p1 -i ../festival-1.95-examples.patch
  patch -p1 -i ../festival-text2wave-manpage.patch
  patch -p0 -i ../festival-1.95-libdir.patch
  patch -p0 -i ../festival-1.95-audsp.patch
  patch -p0 -i ../festival-1.96-chroot.patch
  patch -p1 -i ../festival-no-LD_LIBRARY_PATH-extension.patch
  patch -p1 -i ../festival-safe-temp-file.patch
  cd ../speech_tools
  patch -p1 -i ../speech_tools-undefined-operation.patch
  patch -p0 -i ../speech_tools-1.2.95-config.patch
  patch -p1 -i ../speech_tools-no-LD_LIBRARY_PATH-extension.patch

  cd $srcdir
  # patch -Np0 -i ${srcdir}/speechconfig.patch
  # patch -Np0 -i ${srcdir}/festconfig.patch

  # fix build with new gcc versions and build shared libs - taken from Mageia
  # patch -Np0 -i ${srcdir}/festival-shared-build.patch
  # patch -Np0 -i ${srcdir}/festival-2.1-bettersonamehack.patch
  # patch -Np0 -i ${srcdir}/festival.gcc47.patch
  
  # Avoid make failure on making scripts and docs
  # sed -i "s#examples bin doc#examples#" festival/Makefile
}

build() {
  # Build Speech Tools first
  cd "$srcdir/speech_tools"
  ./configure --prefix=/usr --sysconfdir=/etc
  make OPTIMISE_CXXFLAGS="${CXXFLAGS} -fno-strict-aliasing" OPTIMISE_CCFLAGS="${CFLAGS} -fno-strict-aliasing"

  # Build Festival itself
  cd "$srcdir/festival"
  ./configure --prefix=/usr --sysconfdir=/etc
  make OPTIMISE_CXXFLAGS="${CXXFLAGS}" OPTIMISE_CCFLAGS="${CFLAGS}"
}

package() {
  # Install Speech Tools first
  cd "$srcdir/speech_tools"
  install -dm755 "$pkgdir"/usr/{bin,lib,include/speech_tools/{,instantiate,ling_class,rxp,sigpr,unix}}

  #binaries
  #move binaries over wrappers (FS#7864)
  for i in $(grep -l 'EST shared script' bin/*); do
    cp -f main/$(basename $i) bin;
  done
  install -m755 -t "$pkgdir"/usr/bin bin/[a-z]*
  rm -f "$pkgdir"/usr/bin/{est_gdb,est_examples,est_program}

  # #libraries
  # install -m755 -t "$pkgdir"/usr/lib lib/lib*.so.*
  # ln -sf libestbase.so.${pkgver}.1 "$pkgdir"/usr/lib/libestbase.so
  # ln -sf libestools.so.${pkgver}.1 "$pkgdir"/usr/lib/libestools.so
  # ln -sf libeststring.so.1.2 "$pkgdir"/usr/lib/libeststring.so

  #headers
  for dir in {.,instantiate,ling_class,rxp,sigpr,unix}; do
    install -m644 -t "${pkgdir}"/usr/include/speech_tools/$dir include/$dir/*.h
  done

  # Install Festival itself
  cd "$srcdir"/festival

  #binaries
  install -m755 src/main/festival "$pkgdir"/usr/bin/
  install -m755 src/main/festival_client "$pkgdir"/usr/bin/
  install -m755 examples/benchmark "$pkgdir"/usr/bin/
  install -m755 examples/dumpfeats "$pkgdir"/usr/bin/
  install -m755 examples/durmeanstd "$pkgdir"/usr/bin/
  install -m755 examples/latest "$pkgdir"/usr/bin/
  install -m755 examples/make_utts "$pkgdir"/usr/bin/
  install -m755 examples/powmeanstd "$pkgdir"/usr/bin/
  install -m755 examples/run-festival-script "$pkgdir"/usr/bin/
  install -m755 examples/saytime "$pkgdir"/usr/bin/
  install -m755 examples/scfg_parse_text "$pkgdir"/usr/bin/
  install -m755 examples/text2pos "$pkgdir"/usr/bin/
  install -m755 examples/text2utt "$pkgdir"/usr/bin/
  install -m755 examples/text2wave "$pkgdir"/usr/bin

  # #libraries
  # install -m755 src/lib/libFestival.so.* "$pkgdir"/usr/lib/
  # ln -sf libFestival.so.2.1.0 "$pkgdir"/usr/lib/libFestival.so

  #headers
  install -dm755 "$pkgdir"/usr/include/festival
  install -m644 -t "$pkgdir"/usr/include/festival src/include/*.h

  mkdir -p "$pkgdir"/usr/share/festival
  cp -aR lib/* "$pkgdir"/usr/share/festival
  rm -fv $(find "$pkgdir"/usr/share/festival -name Makefile)
  rm -fv $(find "$pkgdir"/usr/bin -name Makefile)

  #create voices directory
  install -dm755 "$pkgdir"/usr/share/festival/voices

  #licenses
  install -D -m644 "$srcdir"/festival/COPYING \
    "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
  install -D -m644 "$srcdir"/speech_tools/README \
    "$pkgdir"/usr/share/licenses/$pkgname/LICENSE.other

  # Ok now some general cleanups
  for i in $(find "$pkgdir"/usr/include/ -type f); do
    sed -i -e 's,"EST.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/\",speech_tools/,g' \
      -e 's,"siod.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/\",speech_tools/,g' \
      -e 's,"instantiate/.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/instantiate/\",speech_tools/instantiate/,g' -e 's,"instantiate,instantiate,g' \
      -e 's,"ling_class/.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/ling_class/\",speech_tools/ling_class/,g' -e 's,"ling_class,ling_class,g' \
      -e 's,"rxp/.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/rxp/\",speech_tools/rxp/,g' -e 's,"rxp,rxp,g' \
      -e 's,"sigpr/.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/sigpr/\",speech_tools/sigpr/,g' -e 's,"sigpr,sigpr,g' \
      -e 's,"unix/.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/unix/\",speech_tools/unix/,g' -e 's,\.h\">,.h\>,g' -e 's,"unix,unix,g' \
      -e 's,"festival\.h",\<festival/festival.h\>,g' \
      -e 's,"ModuleDescription\.h",\<festival/ModuleDescription.h\>,g' \
      -e 's,"Phone\.h",\<festival/Phone.h\>,g' $i
  done
}
